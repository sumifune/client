{"version":3,"sources":["http-common.js","services/patient.service.js","components/add-patient.component.js","components/patient.component.js","components/patients-list.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","params","http","get","id","data","post","put","delete","surname","AddPatient","props","onChangeName","bind","onChangeSurname","onChangeAddress","onChangeCity","onChangeDni","onChangePhone","onChangeEmail","onChangeDescription","savePatient","newPatient","state","name","address","city","dni","phone","email","description","active","submitted","e","this","setState","target","value","PatientDataService","then","response","catch","console","log","className","onClick","htmlFor","type","required","onChange","style","marginBottom","Component","Patient","getPatient","updateActive","updatePatient","deletePatient","currentPatient","message","match","prevState","status","update","history","push","PatientsList","handleKeyPress","event","key","retrievePatients","onChangeSearchSurname","handlePageChange","handlePageSizeChange","toggleMenu","patients","searchSurname","page","count","pageSize","pageSizes","getRequestParams","getAll","totalPages","patient","getAttribute","expanded","placeholder","onKeyPress","map","index","data-toggle","data-target","aria-expanded","aria-controls","inx","Dropdown","as","ButtonGroup","Button","variant","Toggle","split","Menu","Item","href","aria-labelledby","data-parent","to","size","Pagination","siblingCount","boundaryCount","shape","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.47fbc00d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  // baseURL: \"http://192.168.99.100/api\",\r\n  baseURL: \"http://128.199.52.198/api\",\r\n  // baseURL: \"http://localhost:3000/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n","import http from \"../http-common\";\r\n\r\nclass PatientDataService {\r\n  getAll(params) {\r\n    return http.get(\"/patients\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/patients/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/patients\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/patients/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/patients/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/patients`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/patients?surname=${surname}`);\r\n  }\r\n}\r\n\r\nexport default new PatientDataService();\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\n\r\nexport default class AddPatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeSurname = this.onChangeSurname.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeCity = this.onChangeCity.bind(this);\r\n    this.onChangeDni = this.onChangeDni.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.savePatient = this.savePatient.bind(this);\r\n    this.newPatient = this.newPatient.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      surname: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      dni: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      description: \"\",\r\n      active: false,\r\n\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n  onChangeSurname(e) {\r\n    this.setState({\r\n      surname: e.target.value,\r\n    });\r\n  }\r\n  onChangeAddress(e) {\r\n    this.setState({\r\n      address: e.target.value,\r\n    });\r\n  }\r\n  onChangeCity(e) {\r\n    this.setState({\r\n      city: e.target.value,\r\n    });\r\n  }\r\n  onChangeDni(e) {\r\n    this.setState({\r\n      dni: e.target.value,\r\n    });\r\n  }\r\n  onChangePhone(e) {\r\n    this.setState({\r\n      phone: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n\r\n  savePatient() {\r\n    var data = {\r\n      name: this.state.name,\r\n      surname: this.state.surname,\r\n      address: this.state.address,\r\n      city: this.state.city,\r\n      dni: this.state.dni,\r\n      phone: this.state.phone,\r\n      email: this.state.email,\r\n      description: this.state.description,\r\n    };\r\n\r\n    PatientDataService.create(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          surname: response.data.surname,\r\n          address: response.data.address,\r\n          city: response.data.city,\r\n          dni: response.data.dni,\r\n          phone: response.data.phone,\r\n          email: response.data.email,\r\n          description: response.data.description,\r\n          active: response.data.active,\r\n\r\n          submitted: true,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newPatient() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      surname: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      dni: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      description: \"\",\r\n      active: false,\r\n\r\n      submitted: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Añadido correctamente!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newPatient}>\r\n              Nuevo\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"surname\">Apellidos</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"surname\"\r\n                required\r\n                value={this.state.surname}\r\n                onChange={this.onChangeSurname}\r\n                name=\"surname\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"address\"\r\n                required\r\n                value={this.state.address}\r\n                onChange={this.onChangeAddress}\r\n                name=\"address\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"city\">Ciudad</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"city\"\r\n                required\r\n                value={this.state.city}\r\n                onChange={this.onChangeCity}\r\n                name=\"city\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"dni\">DNI</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"dni\"\r\n                required\r\n                value={this.state.dni}\r\n                onChange={this.onChangeDni}\r\n                name=\"dni\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phone\">Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"phone\"\r\n                required\r\n                value={this.state.phone}\r\n                onChange={this.onChangePhone}\r\n                name=\"phone\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                required\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                name=\"email\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Descripción</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <button style={{marginBottom: \"25px\"}} onClick={this.savePatient} className=\"btn btn-secondary\">\r\n              Añadir\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport './patient.component.css';\r\n\r\nexport default class Patient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeSurname = this.onChangeSurname.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeCity = this.onChangeCity.bind(this);\r\n    this.onChangeDni = this.onChangeDni.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n\r\n    this.getPatient = this.getPatient.bind(this);\r\n    this.updateActive = this.updateActive.bind(this);\r\n    this.updatePatient = this.updatePatient.bind(this);\r\n    this.deletePatient = this.deletePatient.bind(this);\r\n\r\n    this.state = {\r\n      currentPatient: {\r\n        id: null,\r\n        name: \"\",\r\n        surname: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        dni: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        description: \"\",\r\n        active: false,\r\n\r\n        submitted: false,\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPatient(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const name = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          name: name,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeSurname(e) {\r\n    const surname = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          surname: surname,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    const address = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          address: address,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeCity(e) {\r\n    const city = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          city: city,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDni(e) {\r\n    const dni = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          dni: dni,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePhone(e) {\r\n    const phone = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          phone: phone,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    const email = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          email: email,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentPatient: {\r\n        ...prevState.currentPatient,\r\n        description: description,\r\n      },\r\n    }));\r\n  }\r\n\r\n  getPatient(id) {\r\n    PatientDataService.get(id)\r\n      .then((response) => {\r\n        this.setState({\r\n          currentPatient: response.data,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateActive(status) {\r\n    var data = {\r\n      id: this.state.currentPatient.id,\r\n      name: this.state.currentPatient.name,\r\n      surname: this.state.currentPatient.surname,\r\n      address: this.state.currentPatient.address,\r\n      city: this.state.currentPatient.city,\r\n      dni: this.state.currentPatient.dni,\r\n      phone: this.state.currentPatient.phone,\r\n      email: this.state.currentPatient.email,\r\n      description: this.state.currentPatient.description,\r\n      active: status,\r\n    };\r\n\r\n    PatientDataService.update(this.state.currentPatient.id, data)\r\n      .then((response) => {\r\n        this.setState((prevState) => ({\r\n          currentPatient: {\r\n            ...prevState.currentPatient,\r\n            active: status,\r\n          },\r\n        }));\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePatient() {\r\n    PatientDataService.update(\r\n      this.state.currentPatient.id,\r\n      this.state.currentPatient\r\n    )\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        this.setState({\r\n          message: \"Paciente actualizado correctamente!\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deletePatient() {\r\n    PatientDataService.delete(this.state.currentPatient.id)\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        this.props.history.push(\"/patients\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentPatient } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentPatient ? (\r\n          <div className=\"edit-form\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Nombre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  value={currentPatient.name}\r\n                  onChange={this.onChangeName}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"surname\">Apellidos</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"surname\"\r\n                  value={currentPatient.surname}\r\n                  onChange={this.onChangeSurname}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"address\">Dirección</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"address\"\r\n                  value={currentPatient.address}\r\n                  onChange={this.onChangeAddress}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"city\">Ciudad</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"city\"\r\n                  value={currentPatient.city}\r\n                  onChange={this.onChangeCity}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"dni\">DNI</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"dni\"\r\n                  value={currentPatient.dni}\r\n                  onChange={this.onChangeDni}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"phone\">Teléfono</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"phone\"\r\n                  value={currentPatient.phone}\r\n                  onChange={this.onChangePhone}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  value={currentPatient.email}\r\n                  onChange={this.onChangeEmail}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Descripción</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentPatient.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Estado:</strong>\r\n                </label>\r\n                {currentPatient.active ? \"Active\" : \"Inactive\"}\r\n              </div>\r\n            </form>\r\n            <div className=\"action-buttons\">\r\n              {currentPatient.active ? (\r\n                <button\r\n                  className=\"badge badge-primary mr-2\"\r\n                  onClick={() => this.updateActive(false)}\r\n                >\r\n                  Desactivar\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"badge badge-primary mr-2\"\r\n                  onClick={() => this.updateActive(true)}\r\n                >\r\n                  Activar\r\n                </button>\r\n              )}\r\n\r\n              <button\r\n                className=\"badge badge-danger mr-2\"\r\n                onClick={this.deletePatient}\r\n              >\r\n                Eliminar\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"badge badge-success\"\r\n                onClick={this.updatePatient}\r\n              >\r\n                Actualizar\r\n              </button>\r\n              <p>{this.state.message}</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Patient...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport './patients-list.component.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default class PatientsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchSurname = this.onChangeSearchSurname.bind(this);\r\n    this.retrievePatients = this.retrievePatients.bind(this);\r\n    this.handlePageChange = this.handlePageChange.bind(this);\r\n    this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n\r\n    this.state = {\r\n      patients: [],\r\n      searchSurname: \"\",\r\n\r\n      page: 1,\r\n      count: 0,\r\n      pageSize: 3,\r\n    };\r\n\r\n    this.pageSizes = [3, 6, 9];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrievePatients();\r\n  }\r\n\r\n  onChangeSearchSurname(e) {\r\n    const searchSurname = e.target.value;\r\n\r\n    this.setState({\r\n      searchSurname: searchSurname,\r\n    });\r\n  }\r\n\r\n  getRequestParams(searchSurname, page, pageSize) {\r\n    let params = {};\r\n\r\n    if (searchSurname) {\r\n      params[\"surname\"] = searchSurname;\r\n    }\r\n\r\n    if (page) {\r\n      params[\"page\"] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[\"size\"] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrievePatients() {\r\n    const { searchSurname, page, pageSize } = this.state;\r\n    const params = this.getRequestParams(searchSurname, page, pageSize);\r\n\r\n    PatientDataService.getAll(params)\r\n      .then((response) => {\r\n        const { patients, totalPages } = response.data;\r\n\r\n        this.setState({\r\n          patients: patients,\r\n          count: totalPages,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event, value) {\r\n    this.setState(\r\n      {\r\n        page: value,\r\n      },\r\n      () => {\r\n        this.retrievePatients();\r\n      }\r\n    );\r\n  }\r\n\r\n  handlePageSizeChange(event) {\r\n    this.setState(\r\n      {\r\n        pageSize: event.target.value,\r\n        page: 1\r\n      },\r\n      () => {\r\n        this.retrievePatients();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      console.log('enter press here! ');\r\n      this.retrievePatients();\r\n    }\r\n  }\r\n\r\n  toggleMenu(event){\r\n    // console.log(event.target.getAttribute('inx'));\r\n    // 1. Make a shallow copy of the items\r\n    let patients = [...this.state.patients];\r\n    // 2. Make a shallow copy of the item you want to mutate\r\n    let patient = {...patients[event.target.getAttribute('inx')]};\r\n    // console.log(patient);\r\n    // 3. Replace the property you're intested in\r\n    patient.expanded = !!!patient.expanded;\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    patients[event.target.getAttribute('inx')] = patient;\r\n    // 5. Set the state to our new copy\r\n    this.setState({patients});\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      searchSurname,\r\n      patients,\r\n      page,\r\n      count,\r\n      pageSize,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Buscar por apellido\"\r\n              value={searchSurname}\r\n              onChange={this.onChangeSearchSurname}\r\n              onKeyPress={this.handleKeyPress}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.retrievePatients}\r\n              >\r\n                Buscar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n\r\n          <div id=\"accordion\">\r\n\r\n            { patients && patients.map((patient, index) => (\r\n\r\n              <div className=\"card\" key={index}>\r\n                <div className=\"card-header\"\r\n                     id={`heading${index}`}>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"col-9\">\r\n                      <h5 className=\"mb-0\">\r\n                        <button className={\"btn btn-link\" + (patient.expanded ? \"\" : \" collapsed\")}\r\n                                data-toggle=\"collapse\"\r\n                                data-target={`#collapse${index}`}\r\n                                aria-expanded={(patient.expanded ? \"true\" : \"false\")}\r\n                                aria-controls={`collapse${index}`}\r\n                                inx={index}\r\n                                onClick={ this.toggleMenu }>\r\n                          {patient.surname},&nbsp; {patient.name}\r\n                        </button>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n\r\n                      <Dropdown as={ButtonGroup}>\r\n                        <Button variant=\"success\">Citar</Button>\r\n\r\n                        <Dropdown.Toggle split variant=\"success\" id=\"dropdown-split-basic\" />\r\n\r\n                        <Dropdown.Menu>\r\n                          <Dropdown.Item href=\"/add\">Nuevo</Dropdown.Item>\r\n                          <Dropdown.Item href=\"#/action-2\">Facturar</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n\r\n                      {/* comment */}\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div id={`collapse${index}`}\r\n                     className={\"collapse\" + (patient.expanded ? \" show\" : \"\")}\r\n                     aria-labelledby={`heading${index}`}\r\n                     data-parent=\"#accordion\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-9\">\r\n                        <p>{patient.address} - &nbsp; {patient.city}</p>\r\n                        <p>DNI: {patient.dni} - &nbsp; Tel: {patient.phone}</p>\r\n                        <p>{patient.email}</p>\r\n                        <p>Notas: {patient.description}</p>\r\n                        <p className=\"badgePatient\">\r\n                          {patient.active ? (\r\n                            <span className=\"badge badge-primary\">\r\n                              Activo\r\n                            </span>\r\n                          ):(\r\n                            <span className=\"badge badge-danger\">\r\n                              Inactivo\r\n                            </span>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <Link\r\n                          type=\"button\"\r\n                          to={\"/patients/\" + patient.id}\r\n                          className=\"btn btn-secondary\"\r\n                        >\r\n                          Editar\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            ))}\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"paging\">\r\n            <div>\r\n              {\"Refs por página: \"}\r\n              <select onChange={this.handlePageSizeChange} value={pageSize}>\r\n                {this.pageSizes.map((size) => (\r\n                  <option key={size} value={size}>\r\n                    {size}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <div className=\"bbb\">\r\n                <Pagination\r\n                  className=\"my-3\"\r\n                  count={count}\r\n                  page={page}\r\n                  siblingCount={1}\r\n                  boundaryCount={1}\r\n                  variant=\"outlined\"\r\n                  shape=\"rounded\"\r\n                  onChange={this.handlePageChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddPatient from \"./components/add-patient.component\";\nimport Patient from \"./components/patient.component\";\nimport PatientsList from \"./components/patients-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <a href=\"/patients\" className=\"navbar-brand\">\n              Centro Otomo\n            </a>\n            <div className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/patients\"} className=\"nav-link\">\n                  Pacientes\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/add\"} className=\"nav-link\">\n                  Nuevo\n                </Link>\n              </li>\n            </div>\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route\n                exact\n                path={[\"/\", \"/patients\"]}\n                component={PatientsList}\n              />\n              <Route exact path=\"/add\" component={AddPatient} />\n              <Route path=\"/patients/:id\" component={Patient} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}